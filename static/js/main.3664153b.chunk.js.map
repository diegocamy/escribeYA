{"version":3,"sources":["Palabras.js","Resultados.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["listaPalabras","obtenerPalabras","numeroPalabras","array","arrayPalabras","contador","palabra","Math","floor","random","length","includes","push","Resultados","props","palabras","tiempo","className","style","textAlign","margin","map","p","i","key","onClick","reiniciar","Game","state","titulo","palabraEscrita","palabraActual","palabrasAcertadas","cantidadPalabras","timer","juegoTerminado","escribirTitulo","indice","interval","setInterval","setState","clearInterval","handleChange","e","target","value","compararPalabras","handleCantidadPalabras","input","document","getElementById","placeholder","disabled","textContent","classList","add","remove","randomPlaceholder","iniciarJuego","iniciarTimer","focus","arr","reiniciarJuego","seg","min","minutos","segundos","this","type","name","id","onChange","href","rel","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3664153b.chunk.js","sourcesContent":["export const listaPalabras = [\"ábaco\", \"abdomen\", \"abeja\", \"abierto\", \"abogado\", \"abono\", \"aborto\", \"abrazo\", \"abrir\", \"abuelo\", \"abuso\", \"acabar\", \"academia\", \"acceso\", \"acción\", \"aceite\", \"acelga\", \"acento\", \"aceptar\", \"ácido\", \"aclarar\", \"acné\", \"acoger\", \"acoso\", \"activo\", \"acto\", \"actriz\", \"actuar\", \"acudir\", \"acuerdo\", \"acusar\", \"adicto\", \"admitir\", \"adoptar\", \"adorno\", \"aduana\", \"adulto\", \"aéreo\", \"afectar\", \"afición\", \"afinar\", \"afirmar\", \"ágil\", \"agitar\", \"agonía\", \"agosto\", \"agotar\", \"agregar\", \"agrio\", \"agua\", \"agudo\", \"águila\", \"aguja\", \"ahogo\", \"ahorro\", \"aire\", \"aislar\", \"ajedrez\", \"ajeno\", \"ajuste\", \"alacrán\", \"alambre\", \"alarma\", \"alba\", \"álbum\", \"alcalde\", \"aldea\", \"alegre\", \"alejar\", \"alerta\", \"aleta\", \"alfiler\", \"alga\", \"algodón\", \"aliado\", \"aliento\", \"alivio\", \"alma\", \"almeja\", \"almíbar\", \"altar\", \"alteza\", \"altivo\", \"alto\", \"altura\", \"alumno\", \"alzar\", \"amable\", \"amante\", \"amapola\", \"amargo\", \"amasar\", \"ámbar\", \"ámbito\", \"ameno\", \"amigo\", \"amistad\", \"amor\", \"amparo\", \"amplio\", \"ancho\", \"anciano\", \"ancla\", \"andar\", \"andén\", \"anemia\", \"ángulo\", \"anillo\", \"ánimo\", \"anís\", \"anotar\", \"antena\", \"antiguo\", \"antojo\", \"anual\", \"anular\", \"anuncio\", \"añadir\", \"añejo\", \"año\", \"apagar\", \"aparato\", \"apetito\", \"apio\", \"aplicar\", \"apodo\", \"aporte\", \"apoyo\", \"aprender\", \"aprobar\", \"apuesta\", \"apuro\", \"arado\", \"araña\", \"arar\", \"árbitro\", \"árbol\", \"arbusto\", \"archivo\", \"arco\", \"arder\", \"ardilla\", \"arduo\", \"área\", \"árido\", \"aries\", \"armonía\", \"arnés\", \"aroma\", \"arpa\", \"arpón\", \"arreglo\", \"arroz\", \"arruga\", \"arte\", \"artista\", \"asa\", \"asado\", \"asalto\", \"ascenso\", \"asegurar\", \"aseo\", \"asesor\", \"asiento\", \"asilo\", \"asistir\", \"asno\", \"asombro\", \"áspero\", \"astilla\", \"astro\", \"astuto\", \"asumir\", \"asunto\", \"atajo\", \"ataque\", \"atar\", \"atento\", \"ateo\", \"ático\", \"atleta\", \"átomo\", \"atraer\", \"atroz\", \"atún\", \"audaz\", \"audio\", \"auge\", \"aula\", \"aumento\", \"ausente\", \"autor\", \"aval\", \"avance\", \"avaro\", \"ave\", \"avellana\", \"avena\", \"avestruz\", \"avión\", \"aviso\", \"ayer\", \"ayuda\", \"ayuno\", \"azafrán\", \"azar\", \"azote\", \"azúcar\", \"azufre\", \"azul\", \"baba\", \"babor\", \"bache\", \"bahía\", \"baile\", \"bajar\", \"balanza\", \"balcón\", \"balde\", \"bambú\", \"banco\", \"banda\", \"baño\", \"barba\", \"barco\", \"barniz\", \"barro\", \"báscula\", \"bastón\", \"basura\", \"batalla\", \"batería\", \"batir\", \"batuta\", \"baúl\", \"bazar\", \"bebé\", \"bebida\", \"bello\", \"besar\", \"beso\", \"bestia\", \"bicho\", \"bien\", \"bingo\", \"blanco\", \"bloque\", \"blusa\", \"boa\", \"bobina\", \"bobo\", \"boca\", \"bocina\", \"boda\", \"bodega\", \"boina\", \"bola\", \"bolero\", \"bolsa\", \"bomba\", \"bondad\", \"bonito\", \"bono\", \"bonsái\", \"borde\", \"borrar\", \"bosque\", \"bote\", \"botín\", \"bóveda\", \"bozal\", \"bravo\", \"brazo\", \"brecha\", \"breve\", \"brillo\", \"brinco\", \"brisa\", \"broca\", \"broma\", \"bronce\", \"brote\", \"bruja\", \"brusco\", \"bruto\", \"buceo\", \"bucle\", \"bueno\", \"buey\", \"bufanda\", \"bufón\", \"búho\", \"buitre\", \"bulto\", \"burbuja\", \"burla\", \"burro\", \"buscar\", \"butaca\", \"buzón\", \"caballo\", \"cabeza\", \"cabina\", \"cabra\", \"cacao\", \"cadáver\", \"cadena\", \"caer\", \"café\", \"caída\", \"caimán\", \"caja\", \"cajón\", \"cal\", \"calamar\", \"calcio\", \"caldo\", \"calidad\", \"calle\", \"calma\", \"calor\", \"calvo\", \"cama\", \"cambio\", \"camello\", \"camino\", \"campo\", \"cáncer\", \"candil\", \"canela\", \"canguro\", \"canica\", \"canto\", \"caña\", \"cañón\", \"caoba\", \"caos\", \"capaz\", \"capitán\", \"capote\", \"captar\", \"capucha\", \"cara\", \"carbón\", \"cárcel\", \"careta\", \"carga\", \"cariño\", \"carne\", \"carpeta\", \"carro\", \"carta\", \"casa\", \"casco\", \"casero\", \"caspa\", \"castor\", \"catorce\", \"catre\", \"caudal\", \"causa\", \"cazo\", \"cebolla\", \"ceder\", \"cedro\", \"celda\", \"célebre\", \"celoso\", \"célula\", \"cemento\", \"ceniza\", \"centro\", \"cerca\", \"cerdo\", \"cereza\", \"cero\", \"cerrar\", \"certeza\", \"césped\", \"cetro\", \"chacal\", \"chaleco\", \"champú\", \"chancla\", \"chapa\", \"charla\", \"chico\", \"chiste\", \"chivo\", \"choque\", \"choza\", \"chuleta\", \"chupar\", \"ciclón\", \"ciego\", \"cielo\", \"cien\", \"cierto\", \"cifra\", \"cigarro\", \"cima\", \"cinco\", \"cine\", \"cinta\", \"ciprés\", \"circo\", \"ciruela\", \"cisne\", \"cita\", \"ciudad\", \"clamor\", \"clan\", \"claro\", \"clase\", \"clave\", \"cliente\", \"clima\", \"clínica\", \"cobre\", \"cocción\", \"cochino\", \"cocina\", \"coco\", \"código\", \"codo\", \"cofre\", \"coger\", \"cohete\", \"cojín\", \"cojo\", \"cola\", \"colcha\", \"colegio\", \"colgar\", \"colina\", \"collar\", \"colmo\", \"columna\", \"combate\", \"comer\", \"comida\", \"cómodo\", \"compra\", \"conde\", \"conejo\", \"conga\", \"conocer\", \"consejo\", \"contar\", \"copa\", \"copia\", \"corazón\", \"corbata\", \"corcho\", \"cordón\", \"corona\", \"correr\", \"coser\", \"cosmos\", \"costa\", \"cráneo\", \"cráter\", \"crear\", \"crecer\", \"creído\", \"crema\", \"cría\", \"crimen\", \"cripta\", \"crisis\", \"cromo\", \"crónica\", \"croqueta\", \"crudo\", \"cruz\", \"cuadro\", \"cuarto\", \"cuatro\", \"cubo\", \"cubrir\", \"cuchara\", \"cuello\", \"cuento\", \"cuerda\", \"cuesta\", \"cueva\", \"cuidar\", \"culebra\", \"culpa\", \"culto\", \"cumbre\", \"cumplir\", \"cuna\", \"cuneta\", \"cuota\", \"cupón\", \"cúpula\", \"curar\", \"curioso\", \"curso\", \"curva\", \"cutis\", \"dama\", \"danza\", \"dar\", \"dardo\", \"dátil\", \"deber\", \"débil\", \"década\", \"decir\", \"dedo\", \"defensa\", \"definir\", \"dejar\", \"delfín\", \"delgado\", \"delito\", \"demora\", \"denso\", \"dental\", \"deporte\", \"derecho\", \"derrota\", \"desayuno\", \"deseo\", \"desfile\", \"desnudo\", \"destino\", \"desvío\", \"detalle\", \"detener\", \"deuda\", \"día\", \"diablo\", \"diadema\", \"diamante\", \"diana\", \"diario\", \"dibujo\", \"dictar\", \"diente\", \"dieta\", \"diez\", \"difícil\", \"digno\", \"dilema\", \"diluir\", \"dinero\", \"directo\", \"dirigir\", \"disco\", \"diseño\", \"disfraz\", \"diva\", \"divino\", \"doble\", \"doce\", \"dolor\", \"domingo\", \"don\", \"donar\", \"dorado\", \"dormir\", \"dorso\", \"dos\", \"dosis\", \"dragón\", \"droga\", \"ducha\", \"duda\", \"duelo\", \"dueño\", \"dulce\", \"dúo\", \"duque\", \"durar\", \"dureza\", \"duro\", \"ébano\", \"ebrio\", \"echar\", \"eco\", \"ecuador\", \"edad\", \"edición\", \"edificio\", \"editor\", \"educar\", \"efecto\", \"eficaz\", \"eje\", \"ejemplo\", \"elefante\", \"elegir\", \"elemento\", \"elevar\", \"elipse\", \"élite\", \"elixir\", \"elogio\", \"eludir\", \"embudo\", \"emitir\", \"emoción\", \"empate\", \"empeño\", \"empleo\", \"empresa\", \"enano\", \"encargo\", \"enchufe\", \"encía\", \"enemigo\", \"enero\", \"enfado\", \"enfermo\", \"engaño\", \"enigma\", \"enlace\", \"enorme\", \"enredo\", \"ensayo\", \"enseñar\", \"entero\", \"entrar\", \"envase\", \"envío\", \"época\", \"equipo\", \"erizo\", \"escala\", \"escena\", \"escolar\", \"escribir\", \"escudo\", \"esencia\", \"esfera\", \"esfuerzo\", \"espada\", \"espejo\", \"espía\", \"esposa\", \"espuma\", \"esquí\", \"estar\", \"este\", \"estilo\", \"estufa\", \"etapa\", \"eterno\", \"ética\", \"etnia\", \"evadir\", \"evaluar\", \"evento\", \"evitar\", \"exacto\", \"examen\", \"exceso\", \"excusa\", \"exento\", \"exigir\", \"exilio\", \"existir\", \"éxito\", \"experto\", \"explicar\", \"exponer\", \"extremo\", \"fábrica\", \"fábula\", \"fachada\", \"fácil\", \"factor\", \"faena\", \"faja\", \"falda\", \"fallo\", \"falso\", \"faltar\", \"fama\", \"familia\", \"famoso\", \"faraón\", \"farmacia\", \"farol\", \"farsa\", \"fase\", \"fatiga\", \"fauna\", \"favor\", \"fax\", \"febrero\", \"fecha\", \"feliz\", \"feo\", \"feria\", \"feroz\", \"fértil\", \"fervor\", \"festín\", \"fiable\", \"fianza\", \"fiar\", \"fibra\", \"ficción\", \"ficha\", \"fideo\", \"fiebre\", \"fiel\", \"fiera\", \"fiesta\", \"figura\", \"fijar\", \"fijo\", \"fila\", \"filete\", \"filial\", \"filtro\", \"fin\", \"finca\", \"fingir\", \"finito\", \"firma\", \"flaco\", \"flauta\", \"flecha\", \"flor\", \"flota\", \"fluir\", \"flujo\", \"flúor\", \"fobia\", \"foca\", \"fogata\", \"fogón\", \"folio\", \"folleto\", \"fondo\", \"forma\", \"forro\", \"fortuna\", \"forzar\", \"fosa\", \"foto\", \"fracaso\", \"frágil\", \"franja\", \"frase\", \"fraude\", \"freír\", \"freno\", \"fresa\", \"frío\", \"frito\", \"fruta\", \"fuego\", \"fuente\", \"fuerza\", \"fuga\", \"fumar\", \"función\", \"funda\", \"furgón\", \"furia\", \"fusil\", \"fútbol\", \"futuro\", \"gacela\", \"gafas\", \"gaita\", \"gajo\", \"gala\", \"galería\", \"gallo\", \"gamba\", \"ganar\", \"gancho\", \"ganga\", \"ganso\", \"garaje\", \"garza\", \"gasolina\", \"gastar\", \"gato\", \"gavilán\", \"gemelo\", \"gemir\", \"gen\", \"género\", \"genio\", \"gente\", \"geranio\", \"gerente\", \"germen\", \"gesto\", \"gigante\", \"gimnasio\", \"girar\", \"giro\", \"glaciar\", \"globo\", \"gloria\", \"gol\", \"golfo\", \"goloso\", \"golpe\", \"goma\", \"gordo\", \"gorila\", \"gorra\", \"gota\", \"goteo\", \"gozar\", \"grada\", \"gráfico\", \"grano\", \"grasa\", \"gratis\", \"grave\", \"grieta\", \"grillo\", \"gripe\", \"gris\", \"grito\", \"grosor\", \"grúa\", \"grueso\", \"grumo\", \"grupo\", \"guante\", \"guapo\", \"guardia\", \"guerra\", \"guía\", \"guiño\", \"guion\", \"guiso\", \"guitarra\", \"gusano\", \"gustar\", \"haber\", \"hábil\", \"hablar\", \"hacer\", \"hacha\", \"hada\", \"hallar\", \"hamaca\", \"harina\", \"haz\", \"hazaña\", \"hebilla\", \"hebra\", \"hecho\", \"helado\", \"helio\", \"hembra\", \"herir\", \"hermano\", \"héroe\", \"hervir\", \"hielo\", \"hierro\", \"hígado\", \"higiene\", \"hijo\", \"himno\", \"historia\", \"hocico\", \"hogar\", \"hoguera\", \"hoja\", \"hombre\", \"hongo\", \"honor\", \"honra\", \"hora\", \"hormiga\", \"horno\", \"hostil\", \"hoyo\", \"hueco\", \"huelga\", \"huerta\", \"hueso\", \"huevo\", \"huida\", \"huir\", \"humano\", \"húmedo\", \"humilde\", \"humo\", \"hundir\", \"huracán\", \"hurto\", \"icono\", \"ideal\", \"idioma\", \"ídolo\", \"iglesia\", \"iglú\", \"igual\", \"ilegal\", \"ilusión\", \"imagen\", \"imán\", \"imitar\", \"impar\", \"imperio\", \"imponer\", \"impulso\", \"incapaz\", \"índice\", \"inerte\", \"infiel\", \"informe\", \"ingenio\", \"inicio\", \"inmenso\", \"inmune\", \"innato\", \"insecto\", \"instante\", \"interés\", \"íntimo\", \"intuir\", \"inútil\", \"invierno\", \"ira\", \"iris\", \"ironía\", \"isla\", \"islote\", \"jabalí\", \"jabón\", \"jamón\", \"jarabe\", \"jardín\", \"jarra\", \"jaula\", \"jazmín\", \"jefe\", \"jeringa\", \"jinete\", \"jornada\", \"joroba\", \"joven\", \"joya\", \"juerga\", \"jueves\", \"juez\", \"jugador\", \"jugo\", \"juguete\", \"juicio\", \"junco\", \"jungla\", \"junio\", \"juntar\", \"júpiter\", \"jurar\", \"justo\", \"juvenil\", \"juzgar\", \"kilo\", \"koala\", \"labio\", \"lacio\", \"lacra\", \"lado\", \"ladrón\", \"lagarto\", \"lágrima\", \"laguna\", \"laico\", \"lamer\", \"lámina\", \"lámpara\", \"lana\", \"lancha\", \"langosta\", \"lanza\", \"lápiz\", \"largo\", \"larva\", \"lástima\", \"lata\", \"látex\", \"latir\", \"laurel\", \"lavar\", \"lazo\", \"leal\", \"lección\", \"leche\", \"lector\", \"leer\", \"legión\", \"legumbre\", \"lejano\", \"lengua\", \"lento\", \"leña\", \"león\", \"leopardo\", \"lesión\", \"letal\", \"letra\", \"leve\", \"leyenda\", \"libertad\", \"libro\", \"licor\", \"líder\", \"lidiar\", \"lienzo\", \"liga\", \"ligero\", \"lima\", \"límite\", \"limón\", \"limpio\", \"lince\", \"lindo\", \"línea\", \"lingote\", \"lino\", \"linterna\", \"líquido\", \"liso\", \"lista\", \"litera\", \"litio\", \"litro\", \"llaga\", \"llama\", \"llanto\", \"llave\", \"llegar\", \"llenar\", \"llevar\", \"llorar\", \"llover\", \"lluvia\", \"lobo\", \"loción\", \"loco\", \"locura\", \"lógica\", \"logro\", \"lombriz\", \"lomo\", \"lonja\", \"lote\", \"lucha\", \"lucir\", \"lugar\", \"lujo\", \"luna\", \"lunes\", \"lupa\", \"lustro\", \"luto\", \"luz\", \"maceta\", \"macho\", \"madera\", \"madre\", \"maduro\", \"maestro\", \"mafia\", \"magia\", \"mago\", \"maíz\", \"maldad\", \"maleta\", \"malla\", \"malo\", \"mamá\", \"mambo\", \"mamut\", \"manco\", \"mando\", \"manejar\", \"manga\", \"maniquí\", \"manjar\", \"mano\", \"manso\", \"manta\", \"mañana\", \"mapa\", \"máquina\", \"mar\", \"marco\", \"marea\", \"marfil\", \"margen\", \"marido\", \"mármol\", \"marrón\", \"martes\", \"marzo\", \"masa\", \"máscara\", \"masivo\", \"matar\", \"materia\", \"matiz\", \"matriz\", \"máximo\", \"mayor\", \"mazorca\", \"mecha\", \"medalla\", \"medio\", \"médula\", \"mejilla\", \"mejor\", \"melena\", \"melón\", \"memoria\", \"menor\", \"mensaje\", \"mente\", \"menú\", \"mercado\", \"merengue\", \"mérito\", \"mes\", \"mesón\", \"meta\", \"meter\", \"método\", \"metro\", \"mezcla\", \"miedo\", \"miel\", \"miembro\", \"miga\", \"mil\", \"milagro\", \"militar\", \"millón\", \"mimo\", \"mina\", \"minero\", \"mínimo\", \"minuto\", \"miope\", \"mirar\", \"misa\", \"miseria\", \"misil\", \"mismo\", \"mitad\", \"mito\", \"mochila\", \"moción\", \"moda\", \"modelo\", \"moho\", \"mojar\", \"molde\", \"moler\", \"molino\", \"momento\", \"momia\", \"monarca\", \"moneda\", \"monja\", \"monto\", \"moño\", \"morada\", \"morder\", \"moreno\", \"morir\", \"morro\", \"morsa\", \"mortal\", \"mosca\", \"mostrar\", \"motivo\", \"mover\", \"móvil\", \"mozo\", \"mucho\", \"mudar\", \"mueble\", \"muela\", \"muerte\", \"muestra\", \"mugre\", \"mujer\", \"mula\", \"muleta\", \"multa\", \"mundo\", \"muñeca\", \"mural\", \"muro\", \"músculo\", \"museo\", \"musgo\", \"música\", \"muslo\", \"nácar\", \"nación\", \"nadar\", \"naipe\", \"naranja\", \"nariz\", \"narrar\", \"nasal\", \"natal\", \"nativo\", \"natural\", \"náusea\", \"naval\", \"nave\", \"navidad\", \"necio\", \"néctar\", \"negar\", \"negocio\", \"negro\", \"neón\", \"nervio\", \"neto\", \"neutro\", \"nevar\", \"nevera\", \"nicho\", \"nido\", \"niebla\", \"nieto\", \"niñez\", \"niño\", \"nítido\", \"nivel\", \"nobleza\", \"noche\", \"nómina\", \"noria\", \"norma\", \"norte\", \"nota\", \"noticia\", \"novato\", \"novela\", \"novio\", \"nube\", \"nuca\", \"núcleo\", \"nudillo\", \"nudo\", \"nuera\", \"nueve\", \"nuez\", \"nulo\", \"número\", \"nutria\", \"oasis\", \"obeso\", \"obispo\", \"objeto\", \"obra\", \"obrero\", \"observar\", \"obtener\", \"obvio\", \"oca\", \"ocaso\", \"océano\", \"ochenta\", \"ocho\", \"ocio\", \"ocre\", \"octavo\", \"octubre\", \"oculto\", \"ocupar\", \"ocurrir\", \"odiar\", \"odio\", \"odisea\", \"oeste\", \"ofensa\", \"oferta\", \"oficio\", \"ofrecer\", \"ogro\", \"oído\", \"oír\", \"ojo\", \"ola\", \"oleada\", \"olfato\", \"olivo\", \"olla\", \"olmo\", \"olor\", \"olvido\", \"ombligo\", \"onda\", \"onza\", \"opaco\", \"opción\", \"ópera\", \"opinar\", \"oponer\", \"optar\", \"óptica\", \"opuesto\", \"oración\", \"orador\", \"oral\", \"órbita\", \"orca\", \"orden\", \"oreja\", \"órgano\", \"orgía\", \"orgullo\", \"oriente\", \"origen\", \"orilla\", \"oro\", \"orquesta\", \"oruga\", \"osadía\", \"oscuro\", \"osezno\", \"oso\", \"ostra\", \"otoño\", \"otro\", \"oveja\", \"óvulo\", \"óxido\", \"oxígeno\", \"oyente\", \"ozono\", \"pacto\", \"padre\", \"paella\", \"página\", \"pago\", \"país\", \"pájaro\", \"palabra\", \"palco\", \"paleta\", \"pálido\", \"palma\", \"paloma\", \"palpar\", \"pan\", \"panal\", \"pánico\", \"pantera\", \"pañuelo\", \"papá\", \"papel\", \"papilla\", \"paquete\", \"parar\", \"parcela\", \"pared\", \"parir\", \"paro\", \"párpado\", \"parque\", \"párrafo\", \"parte\", \"pasar\", \"paseo\", \"pasión\", \"paso\", \"pasta\", \"pata\", \"patio\", \"patria\", \"pausa\", \"pauta\", \"pavo\", \"payaso\", \"peatón\", \"pecado\", \"pecera\", \"pecho\", \"pedal\", \"pedir\", \"pegar\", \"peine\", \"pelar\", \"peldaño\", \"pelea\", \"peligro\", \"pellejo\", \"pelo\", \"peluca\", \"pena\", \"pensar\", \"peñón\", \"peón\", \"peor\", \"pepino\", \"pequeño\", \"pera\", \"percha\", \"perder\", \"pereza\", \"perfil\", \"perico\", \"perla\", \"permiso\", \"perro\", \"persona\", \"pesa\", \"pesca\", \"pésimo\", \"pestaña\", \"pétalo\", \"petróleo\", \"pez\", \"pezuña\", \"picar\", \"pichón\", \"pie\", \"piedra\", \"pierna\", \"pieza\", \"pijama\", \"pilar\", \"piloto\", \"pimienta\", \"pino\", \"pintor\", \"pinza\", \"piña\", \"piojo\", \"pipa\", \"pirata\", \"pisar\", \"piscina\", \"piso\", \"pista\", \"pitón\", \"pizca\", \"placa\", \"plan\", \"plata\", \"playa\", \"plaza\", \"pleito\", \"pleno\", \"plomo\", \"pluma\", \"plural\", \"pobre\", \"poco\", \"poder\", \"podio\", \"poema\", \"poesía\", \"poeta\", \"polen\", \"policía\", \"pollo\", \"polvo\", \"pomada\", \"pomelo\", \"pomo\", \"pompa\", \"poner\", \"porción\", \"portal\", \"posada\", \"poseer\", \"posible\", \"poste\", \"potencia\", \"potro\", \"pozo\", \"prado\", \"precoz\", \"pregunta\", \"premio\", \"prensa\", \"preso\", \"previo\", \"primo\", \"príncipe\", \"prisión\", \"privar\", \"proa\", \"probar\", \"proceso\", \"producto\", \"proeza\", \"profesor\", \"programa\", \"prole\", \"promesa\", \"pronto\", \"propio\", \"próximo\", \"prueba\", \"público\", \"puchero\", \"pudor\", \"pueblo\", \"puerta\", \"puesto\", \"pulga\", \"pulir\", \"pulmón\", \"pulpo\", \"pulso\", \"puma\", \"punto\", \"puñal\", \"puño\", \"pupa\", \"pupila\", \"puré\", \"quedar\", \"queja\", \"quemar\", \"querer\", \"queso\", \"quieto\", \"química\", \"quince\", \"quitar\", \"rábano\", \"rabia\", \"rabo\", \"ración\", \"radical\", \"raíz\", \"rama\", \"rampa\", \"rancho\", \"rango\", \"rapaz\", \"rápido\", \"rapto\", \"rasgo\", \"raspa\", \"rato\", \"rayo\", \"raza\", \"razón\", \"reacción\", \"realidad\", \"rebaño\", \"rebote\", \"recaer\", \"receta\", \"rechazo\", \"recoger\", \"recreo\", \"recto\", \"recurso\", \"red\", \"redondo\", \"reducir\", \"reflejo\", \"reforma\", \"refrán\", \"refugio\", \"regalo\", \"regir\", \"regla\", \"regreso\", \"rehén\", \"reino\", \"reír\", \"reja\", \"relato\", \"relevo\", \"relieve\", \"relleno\", \"reloj\", \"remar\", \"remedio\", \"remo\", \"rencor\", \"rendir\", \"renta\", \"reparto\", \"repetir\", \"reposo\", \"reptil\", \"res\", \"rescate\", \"resina\", \"respeto\", \"resto\", \"resumen\", \"retiro\", \"retorno\", \"retrato\", \"reunir\", \"revés\", \"revista\", \"rey\", \"rezar\", \"rico\", \"riego\", \"rienda\", \"riesgo\", \"rifa\", \"rígido\", \"rigor\", \"rincón\", \"riñón\", \"río\", \"riqueza\", \"risa\", \"ritmo\", \"rito\", \"rizo\", \"roble\", \"roce\", \"rociar\", \"rodar\", \"rodeo\", \"rodilla\", \"roer\", \"rojizo\", \"rojo\", \"romero\", \"romper\", \"ron\", \"ronco\", \"ronda\", \"ropa\", \"ropero\", \"rosa\", \"rosca\", \"rostro\", \"rotar\", \"rubí\", \"rubor\", \"rudo\", \"rueda\", \"rugir\", \"ruido\", \"ruina\", \"ruleta\", \"rulo\", \"rumbo\", \"rumor\", \"ruptura\", \"ruta\", \"rutina\", \"sábado\", \"saber\", \"sabio\", \"sable\", \"sacar\", \"sagaz\", \"sagrado\", \"sala\", \"saldo\", \"salero\", \"salir\", \"salmón\", \"salón\", \"salsa\", \"salto\", \"salud\", \"salvar\", \"samba\", \"sanción\", \"sandía\", \"sanear\", \"sangre\", \"sanidad\", \"sano\", \"santo\", \"sapo\", \"saque\", \"sardina\", \"sartén\", \"sastre\", \"satán\", \"sauna\", \"saxofón\", \"sección\", \"seco\", \"secreto\", \"secta\", \"sed\", \"seguir\", \"seis\", \"sello\", \"selva\", \"semana\", \"semilla\", \"senda\", \"sensor\", \"señal\", \"señor\", \"separar\", \"sepia\", \"sequía\", \"ser\", \"serie\", \"sermón\", \"servir\", \"sesenta\", \"sesión\", \"seta\", \"setenta\", \"severo\", \"sexo\", \"sexto\", \"sidra\", \"siesta\", \"siete\", \"siglo\", \"signo\", \"sílaba\", \"silbar\", \"silencio\", \"silla\", \"símbolo\", \"simio\", \"sirena\", \"sistema\", \"sitio\", \"situar\", \"sobre\", \"socio\", \"sodio\", \"sol\", \"solapa\", \"soldado\", \"soledad\", \"sólido\", \"soltar\", \"solución\", \"sombra\", \"sondeo\", \"sonido\", \"sonoro\", \"sonrisa\", \"sopa\", \"soplar\", \"soporte\", \"sordo\", \"sorpresa\", \"sorteo\", \"sostén\", \"sótano\", \"suave\", \"subir\", \"suceso\", \"sudor\", \"suegra\", \"suelo\", \"sueño\", \"suerte\", \"sufrir\", \"sujeto\", \"sultán\", \"sumar\", \"superar\", \"suplir\", \"suponer\", \"supremo\", \"sur\", \"surco\", \"sureño\", \"surgir\", \"susto\", \"sutil\", \"tabaco\", \"tabique\", \"tabla\", \"tabú\", \"taco\", \"tacto\", \"tajo\", \"talar\", \"talco\", \"talento\", \"talla\", \"talón\", \"tamaño\", \"tambor\", \"tango\", \"tanque\", \"tapa\", \"tapete\", \"tapia\", \"tapón\", \"taquilla\", \"tarde\", \"tarea\", \"tarifa\", \"tarjeta\", \"tarot\", \"tarro\", \"tarta\", \"tatuaje\", \"tauro\", \"taza\", \"tazón\", \"teatro\", \"techo\", \"tecla\", \"técnica\", \"tejado\", \"tejer\", \"tejido\", \"tela\", \"teléfono\", \"tema\", \"temor\", \"templo\", \"tenaz\", \"tender\", \"tener\", \"tenis\", \"tenso\", \"teoría\", \"terapia\", \"terco\", \"término\", \"ternura\", \"terror\", \"tesis\", \"tesoro\", \"testigo\", \"tetera\", \"texto\", \"tez\", \"tibio\", \"tiburón\", \"tiempo\", \"tienda\", \"tierra\", \"tieso\", \"tigre\", \"tijera\", \"tilde\", \"timbre\", \"tímido\", \"timo\", \"tinta\", \"tío\", \"típico\", \"tipo\", \"tira\", \"tirón\", \"titán\", \"títere\", \"título\", \"tiza\", \"toalla\", \"tobillo\", \"tocar\", \"tocino\", \"todo\", \"toga\", \"toldo\", \"tomar\", \"tono\", \"tonto\", \"topar\", \"tope\", \"toque\", \"tórax\", \"torero\", \"tormenta\", \"torneo\", \"toro\", \"torpedo\", \"torre\", \"torso\", \"tortuga\", \"tos\", \"tosco\", \"toser\", \"tóxico\", \"trabajo\", \"tractor\", \"traer\", \"tráfico\", \"trago\", \"traje\", \"tramo\", \"trance\", \"trato\", \"trauma\", \"trazar\", \"trébol\", \"tregua\", \"treinta\", \"tren\", \"trepar\", \"tres\", \"tribu\", \"trigo\", \"tripa\", \"triste\", \"triunfo\", \"trofeo\", \"trompa\", \"tronco\", \"tropa\", \"trote\", \"trozo\", \"truco\", \"trueno\", \"trufa\", \"tubería\", \"tubo\", \"tuerto\", \"tumba\", \"tumor\", \"túnel\", \"túnica\", \"turbina\", \"turismo\", \"turno\", \"tutor\", \"ubicar\", \"úlcera\", \"umbral\", \"unidad\", \"unir\", \"universo\", \"uno\", \"untar\", \"uña\", \"urbano\", \"urbe\", \"urgente\", \"urna\", \"usar\", \"usuario\", \"útil\", \"utopía\", \"uva\", \"vaca\", \"vacío\", \"vacuna\", \"vagar\", \"vago\", \"vaina\", \"vajilla\", \"vale\", \"válido\", \"valle\", \"valor\", \"válvula\", \"vampiro\", \"vara\", \"variar\", \"varón\", \"vaso\", \"vecino\", \"vector\", \"vehículo\", \"veinte\", \"vejez\", \"vela\", \"velero\", \"veloz\", \"vena\", \"vencer\", \"venda\", \"veneno\", \"vengar\", \"venir\", \"venta\", \"venus\", \"ver\", \"verano\", \"verbo\", \"verde\", \"vereda\", \"verja\", \"verso\", \"verter\", \"vía\", \"viaje\", \"vibrar\", \"vicio\", \"víctima\", \"vida\", \"vídeo\", \"vidrio\", \"viejo\", \"viernes\", \"vigor\", \"vil\", \"villa\", \"vinagre\", \"vino\", \"viñedo\", \"violín\", \"viral\", \"virgo\", \"virtud\", \"visor\", \"víspera\", \"vista\", \"vitamina\", \"viudo\", \"vivaz\", \"vivero\", \"vivir\", \"vivo\", \"volcán\", \"volumen\", \"volver\", \"voraz\", \"votar\", \"voto\", \"voz\", \"vuelo\", \"vulgar\", \"yacer\", \"yate\", \"yegua\", \"yema\", \"yerno\", \"yeso\", \"yodo\", \"yoga\", \"yogur\", \"zafiro\", \"zanja\", \"zapato\", \"zarza\", \"zona\", \"zorro\", \"zumo\", \"zurdo\"];\r\n\r\nexport const obtenerPalabras = (numeroPalabras, array) => {\r\n  const arrayPalabras = [];\r\n  let contador = 0;\r\n  while (contador < numeroPalabras) {\r\n    const randomIndex = Math.floor(Math.random() * array.length);\r\n    const palabra = array[randomIndex];\r\n    if (!arrayPalabras.includes(palabra)) {\r\n      arrayPalabras.push(palabra);\r\n      contador++;\r\n    }\r\n  }\r\n  return arrayPalabras;\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Resultados.css'\r\n\r\nexport default function Resultados(props) {\r\n  const { palabras, tiempo } = props;\r\n\r\n  const handleclick = () => {\r\n    props.reiniciar();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Resultados\">\r\n      <div className=\"top\">\r\n        <h1>Resultados</h1>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <div className=\"top\">\r\n          <h3 style={{ textAlign: 'left', margin: 'auto 5%' }}>Palabras:</h3>\r\n        </div>\r\n        <div className=\"bottom\">\r\n          <div className=\"palabras\">\r\n            {palabras.map((p, i) => <div key={p}>{i + 1}. {p}</div>)}\r\n          </div>\r\n          <div className=\"tiempo\">\r\n            <h3>Tiempo:</h3>\r\n            <h1>{tiempo}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"boton\">\r\n        <button onClick={handleclick}>Cerrar</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { listaPalabras, obtenerPalabras } from './Palabras'\r\n\r\nimport './Game.css'\r\nimport Resultados from './Resultados'\r\n\r\nexport default class Game extends Component {\r\n  state = {\r\n    titulo: '',\r\n    palabras: [],\r\n    palabraEscrita: '',\r\n    palabraActual: '',\r\n    palabrasAcertadas: 0,\r\n    cantidadPalabras: 10,\r\n    timer: '00:00',\r\n    juegoTerminado: true\r\n  }\r\n\r\n\r\n  escribirTitulo = () => {\r\n    const tituloFinal = 'EscribeYA'\r\n    let titulo = '';\r\n    let indice = 0;\r\n    const interval = setInterval(() => {\r\n      if (this.state.titulo !== tituloFinal) {\r\n        titulo = titulo + tituloFinal[indice];\r\n        this.setState({ titulo }, () => indice++)\r\n      } else {\r\n        clearInterval(interval)\r\n      }\r\n    }, 200);\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ palabraEscrita: e.target.value }, this.compararPalabras)\r\n  }\r\n\r\n  handleCantidadPalabras = (e) => {\r\n    if (e.target.value >= 5 && e.target.value <= 30) {\r\n      this.setState({ cantidadPalabras: e.target.value })\r\n    } else {\r\n      e.target.value = this.state.cantidadPalabras\r\n    }\r\n  }\r\n\r\n  compararPalabras = () => {\r\n    if (this.state.palabraActual === this.state.palabraEscrita) {\r\n      //Proxima palabra\r\n      const indice = this.state.palabrasAcertadas + 1;\r\n      //Si es al ultima palabra termina el juego\r\n      if (indice >= this.state.palabras.length) {\r\n        this.setState({\r\n          juegoTerminado: true,\r\n          palabraEscrita: '',\r\n          palabraActual: '',\r\n          palabrasAcertadas: indice\r\n        }, () => {\r\n          const input = document.getElementById('input-palabra');\r\n          input.placeholder = \"Puedes hacerlo mejor?\";\r\n          input.disabled = true;\r\n          document.getElementById('btn-iniciar').disabled = false;\r\n          document.getElementById('btn-iniciar').textContent = \"Reiniciar\";\r\n          document.getElementById('btn-iniciar').classList.add('btn-verde');\r\n          document.getElementById('btn-iniciar').classList.remove('btn-desactivado');\r\n        })\r\n      } else {\r\n        this.setState({\r\n          palabraActual: this.state.palabras[indice],\r\n          palabraEscrita: '',\r\n          palabrasAcertadas: indice\r\n        }, () => document.getElementById('input-palabra').placeholder = this.randomPlaceholder())\r\n      }\r\n    }\r\n  }\r\n\r\n  iniciarJuego = () => {\r\n    if (this.state.palabras.length > 0) {\r\n      this.setState({\r\n        palabras: [],\r\n        palabraEscrita: '',\r\n        palabraActual: '',\r\n        palabrasAcertadas: 0,\r\n        timer: '00:00',\r\n        juegoTerminado: true\r\n      })\r\n    }\r\n    const palabras = obtenerPalabras(this.state.cantidadPalabras, listaPalabras);\r\n    this.setState({\r\n      palabras,\r\n      palabraActual: palabras[0],\r\n      juegoTerminado: false\r\n    }, this.iniciarTimer);\r\n\r\n    document.getElementById('input-palabra').disabled = false;\r\n    document.getElementById('btn-iniciar').disabled = true;\r\n    document.getElementById('btn-iniciar').classList.remove('btn-verde');\r\n    document.getElementById('btn-iniciar').classList.add('btn-desactivado');\r\n    document.getElementById('input-palabra').focus();\r\n    document.getElementById('input-palabra').placeholder = this.randomPlaceholder();\r\n\r\n  }\r\n\r\n  randomPlaceholder = () => {\r\n    const arr = [\r\n      'Apurate',\r\n      'Muy lento...',\r\n      'Más rápido!',\r\n      'Dale rápido',\r\n      'Vamos dale!'\r\n    ]\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n  }\r\n\r\n  reiniciarJuego = () => {\r\n    this.setState({\r\n      palabras: [],\r\n      palabraEscrita: '',\r\n      palabraActual: '',\r\n      palabrasAcertadas: 0,\r\n      cantidadPalabras: 10,\r\n      timer: '00:00',\r\n      juegoTerminado: true\r\n    })\r\n\r\n    document.getElementById('btn-iniciar').disabled = false;\r\n    document.getElementById('btn-iniciar').classList.add('btn-verde');\r\n    document.getElementById('btn-iniciar').classList.remove('btn-desactivado');\r\n    document.getElementById('btn-iniciar').textContent = 'Reiniciar';\r\n    const input = document.getElementById('input-palabra');\r\n    input.placeholder = \"Puedes hacerlo mejor?\";\r\n\r\n  }\r\n\r\n  iniciarTimer = () => {\r\n    let seg = 0;\r\n    let min = 0;\r\n    const interval = setInterval(() => {\r\n      if (this.state.juegoTerminado) {\r\n        clearInterval(interval);\r\n        return;\r\n      }\r\n      if (seg + 1 === 60) {\r\n        min++;\r\n        seg = 0;\r\n      } else {\r\n        seg++;\r\n      }\r\n      let minutos = min < 10 ? `0${min}` : min;\r\n      let segundos = seg < 10 ? `0${seg}` : seg;\r\n      this.setState({ timer: `${minutos}:${segundos}` });\r\n    }, 1000);\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.escribirTitulo();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Game\">\r\n        <div className=\"titulo\">\r\n          <h1>{this.state.titulo}<span className=\"intermitente\">_</span></h1>\r\n          <p>Qué tan rápido puedes escribir?</p>\r\n        </div>\r\n        {this.state.juegoTerminado && this.state.palabras.length > 0 && <Resultados palabras={this.state.palabras} tiempo={this.state.timer} reiniciar={this.reiniciarJuego} />}\r\n        <div className=\"input\">\r\n          {this.state.palabraActual ? <p className=\"growing\">{this.state.palabraActual}</p> : <p>...</p>}\r\n          <input\r\n            type=\"text\"\r\n            name=\"palabra\"\r\n            id=\"input-palabra\"\r\n            value={this.state.palabraEscrita}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Prepárate\"\r\n          />\r\n          <div className=\"botones\">\r\n            <button className=\"btn-verde\" id=\"btn-iniciar\" onClick={this.iniciarJuego}>Iniciar</button>\r\n            <button className=\"btn-rojo\" id=\"btn-parar\" onClick={this.reiniciarJuego}>Parar</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"inferior\">\r\n          <div className=\"cantidad\">\r\n            <p>Elige la cantidad de palabras</p>\r\n            <input type=\"number\" name=\"cantidad-palabras\" id=\"cantidad-palabras\" value={this.state.cantidadPalabras} onChange={this.handleCantidadPalabras} />\r\n          </div>\r\n          <div className=\"timer\">\r\n            <p>Timer</p>\r\n            <h1>{this.state.timer}</h1>\r\n          </div>\r\n          <div className=\"contacto\">\r\n            <p>GitHub</p>\r\n            <a href=\"http://github.com/diegocamy\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github fa-3x\"></i></a>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport Game from './Game';\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}